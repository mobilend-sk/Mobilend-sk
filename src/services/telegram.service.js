class TelegramService {
	constructor() {
		// –ó–¥–µ—Å—å –±—É–¥—É—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Telegram Bot API
		this.botToken = process.env.TELEGRAM_BOT_TOKEN || ''
		this.chatId = process.env.TELEGRAM_CHAT_ID || ''
	}

	// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–∫–∞–∑–æ–º
	formatOrderMessage(orderData) {
		const {
			orderNumber,
			contact,
			delivery,
			items,
			total,
			totalItems,
			timestamp
		} = orderData

		// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
		const date = new Date(timestamp).toLocaleString('sk-SK', {
			year: 'numeric',
			month: '2-digit',
			day: '2-digit',
			hour: '2-digit',
			minute: '2-digit'
		})

		// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
		const itemsList = items.map((item, index) => {
			const price = parseFloat(item.product?.price) || 0
			const discount = parseFloat(item.product?.discount) || 0
			const discountedPrice = discount > 0
				? price - (price * discount / 100)
				: price
			const totalPrice = discountedPrice * item.quantity

			return `${index + 1}. ${item.product?.model || 'Nezn√°my produkt'}
   ‚Ä¢ Mno≈æstvo: ${item.quantity}x
   ‚Ä¢ Cena: ‚Ç¨${totalPrice.toFixed(2)}${discount > 0 ? ` (p√¥vodne ‚Ç¨${price.toFixed(2)})` : ''}`
		}).join('\n\n')

		// Z√≠skanie n√°zvu sp√¥sobu platby
		const getPaymentMethodLabel = (method) => {
			const methods = {
				cash_on_delivery: 'Dobierka (platba pri prevzat√≠)',
				credit: 'K√∫pa na spl√°tky',
				online_payment: 'Online platba kartou'
			}
			return methods[method] || method
		}

		// Hlavn√° spr√°va
		const message = `
üõçÔ∏è NOV√Å OBJEDN√ÅVKA #${orderNumber}

üìÖ D√°tum: ${date}

üë§ Z√ÅKAZN√çK:
‚Ä¢ Meno: ${contact.firstName} ${contact.lastName}
‚Ä¢ Telef√≥n: ${contact.phone}
‚Ä¢ Email: ${contact.email}${contact.comment ? `
‚Ä¢ Pozn√°mka: ${contact.comment}` : ''}

üöö DORUƒåENIE:
‚Ä¢ Adresa: ${delivery.address}
‚Ä¢ PSƒå: ${delivery.postalCode}
‚Ä¢ Mesto: ${delivery.city}
‚Ä¢ Platba: ${getPaymentMethodLabel(delivery.paymentMethod)}

üõí OBJEDNAN√â PRODUKTY (${totalItems} ks):
${itemsList}

üí∞ CELKOV√Å SUMA: ‚Ç¨${total.toFixed(2)}

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
Mobilend - mobilne-technologie.sk
		`.trim()

		return message
	}

	// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram (–ø–æ–∫–∞ console.log)
	async sendOrderToTelegram(orderData) {
		try {
			const message = this.formatOrderMessage(orderData)

			// –ü–æ–∫–∞ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –≤–º–µ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
			console.log('üì± TELEGRAM ORDER MESSAGE:')
			console.log('‚îÄ'.repeat(50))
			console.log(message)
			console.log('‚îÄ'.repeat(50))

			// –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞:
			/*
			const response = await fetch(`https://api.telegram.org/bot${this.botToken}/sendMessage`, {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify({
					chat_id: this.chatId,
					text: message,
					parse_mode: 'HTML'
				})
			})

			if (!response.ok) {
				throw new Error('Chyba pri odoslan√≠ spr√°vy do Telegram')
			}

			return await response.json()
			*/

			// –°–∏–º—É–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
			return {
				success: true,
				message: 'Objedn√°vka bola √∫spe≈°ne odoslan√°',
				orderNumber: orderData.orderNumber
			}

		} catch (error) {
			console.error('Chyba pri odoslan√≠ objedn√°vky do Telegram:', error)
			throw new Error('Nepodarilo sa odosla≈• objedn√°vku. Sk√∫ste to znovu.')
		}
	}

	// –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
	async sendNotification(message, type = 'info') {
		try {
			const emoji = {
				info: '‚ÑπÔ∏è',
				success: '‚úÖ',
				warning: '‚ö†Ô∏è',
				error: '‚ùå'
			}

			const formattedMessage = `${emoji[type]} ${message}`

			console.log(`üì± TELEGRAM NOTIFICATION [${type.toUpperCase()}]:`)
			console.log(formattedMessage)

			return { success: true }
		} catch (error) {
			console.error('Chyba pri odoslan√≠ notifik√°cie:', error)
			throw error
		}
	}

	// –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Telegram (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
	validateConfig() {
		if (!this.botToken) {
			console.warn('‚ö†Ô∏è TELEGRAM_BOT_TOKEN nie je nastaven√Ω')
			return false
		}

		if (!this.chatId) {
			console.warn('‚ö†Ô∏è TELEGRAM_CHAT_ID nie je nastaven√Ω')
			return false
		}

		return true
	}

	// –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
	async sendTestMessage() {
		const testOrder = {
			orderNumber: 'TEST123',
			contact: {
				firstName: 'J√°n',
				lastName: 'Nov√°k',
				phone: '+421 900 123 456',
				email: 'jan.novak@example.sk',
				comment: 'Testovacia objedn√°vka'
			},
			delivery: {
				address: 'Hlavn√° ulica 123',
				postalCode: '811 01',
				city: 'Bratislava',
				paymentMethod: 'cash_on_delivery'
			},
			items: [
				{
					product: {
						model: 'Samsung Galaxy S24 256GB Black',
						price: 899,
						discount: 10
					},
					quantity: 1
				}
			],
			total: 809.10,
			totalItems: 1,
			timestamp: new Date().toISOString()
		}

		return await this.sendOrderToTelegram(testOrder)
	}
}

const telegramService = new TelegramService()

export default telegramService